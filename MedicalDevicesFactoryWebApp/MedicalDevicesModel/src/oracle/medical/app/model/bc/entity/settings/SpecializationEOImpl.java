package oracle.medical.app.model.bc.entity.settings;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 03 18:05:10 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class SpecializationEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        SpecializationId,
        Specialization,
        QualificationId,
        Qualification;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int SPECIALIZATIONID = AttributesEnum.SpecializationId.index();
    public static final int SPECIALIZATION = AttributesEnum.Specialization.index();
    public static final int QUALIFICATIONID = AttributesEnum.QualificationId.index();
    public static final int QUALIFICATION = AttributesEnum.Qualification.index();

    /**
     * This is the default constructor (do not remove).
     */
    public SpecializationEOImpl() {
    }

    /**
     * Gets the attribute value for SpecializationId, using the alias name SpecializationId.
     * @return the value of SpecializationId
     */
    public Number getSpecializationId() {
        return (Number) getAttributeInternal(SPECIALIZATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for SpecializationId.
     * @param value value to set the SpecializationId
     */
    public void setSpecializationId(Number value) {
        setAttributeInternal(SPECIALIZATIONID, value);
    }

    /**
     * Gets the attribute value for Specialization, using the alias name Specialization.
     * @return the value of Specialization
     */
    public String getSpecialization() {
        return (String) getAttributeInternal(SPECIALIZATION);
    }

    /**
     * Sets <code>value</code> as the attribute value for Specialization.
     * @param value value to set the Specialization
     */
    public void setSpecialization(String value) {
        setAttributeInternal(SPECIALIZATION, value);
    }

    /**
     * Gets the attribute value for QualificationId, using the alias name QualificationId.
     * @return the value of QualificationId
     */
    public Number getQualificationId() {
        return (Number) getAttributeInternal(QUALIFICATIONID);
    }

    /**
     * Sets <code>value</code> as the attribute value for QualificationId.
     * @param value value to set the QualificationId
     */
    public void setQualificationId(Number value) {
        setAttributeInternal(QUALIFICATIONID, value);
    }

    /**
     * @return the associated entity QualificationEOImpl.
     */
    public QualificationEOImpl getQualification() {
        return (QualificationEOImpl) getAttributeInternal(QUALIFICATION);
    }

    /**
     * Sets <code>value</code> as the associated entity QualificationEOImpl.
     */
    public void setQualification(QualificationEOImpl value) {
        setAttributeInternal(QUALIFICATION, value);
    }

    /**
     * @param specializationId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number specializationId) {
        return new Key(new Object[] { specializationId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.medical.app.model.bc.entity.settings.SpecializationEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            SequenceImpl seq = new SequenceImpl("SPECIALIZATION_SEQ", this.getDBTransaction());
            Number specializationId = seq.getSequenceNumber();
            this.setSpecializationId(specializationId);
        }
        super.doDML(operation, e);
    }
}

