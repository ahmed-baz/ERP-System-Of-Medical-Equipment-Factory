package oracle.medical.app.model.bc.module;

import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.ViewObject;
import oracle.jbo.domain.Number;
import oracle.jbo.server.ApplicationModuleImpl;

import oracle.jbo.server.ViewLinkImpl;


import oracle.jbo.server.ViewObjectImpl;

import oracle.medical.app.model.bc.module.common.StoreAppModuleAM;


// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Tue Mar 12 21:28:24 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class StoreAppModuleAMImpl extends ApplicationModuleImpl implements StoreAppModuleAM {
    /**
     * This is the default constructor (do not remove).
     */
    public StoreAppModuleAMImpl() {
    }

    /**
     * Container's getter for Ores1.
     * @return Ores1
     */
    public ViewObjectImpl getOres1() {
        return (ViewObjectImpl) findViewObject("Ores1");
    }

    /**
     * Container's getter for MainOres1.
     * @return MainOres1
     */
    public ViewObjectImpl getMainOres1() {
        return (ViewObjectImpl) findViewObject("MainOres1");
    }

    /**
     * Container's getter for AddNweOres1.
     * @return AddNweOres1
     */
    public ViewObjectImpl getAddNweOres1() {
        return (ViewObjectImpl) findViewObject("AddNweOres1");
    }


    /**
     * Container's getter for WaitingOres1.
     * @return WaitingOres1
     */
    public ViewObjectImpl getWaitingOres1() {
        return (ViewObjectImpl) findViewObject("WaitingOres1");
    }

    public void setActiveOre() { 
        ViewObjectImpl vo = getMainOres1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "Y");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
    }


    public void setWaitingOre() {
        ViewObjectImpl vo = getWaitingOres1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "N");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
    }


    public void setMainActiveOre() {
        ViewObjectImpl oresVO = getMainOres1();
        oresVO.setWhereClause("ACTIVE = " + "'Y'");
        oresVO.executeQuery();
    }


    /**
     * Container's getter for EquationOres1.
     * @return EquationOres1
     */
    public ViewObjectImpl getEquationOres1() {
        return (ViewObjectImpl) findViewObject("EquationOres1");
    }

    /**
     * Container's getter for OresAddition1.
     * @return OresAddition1
     */
    public ViewObjectImpl getOresAddition1() {
        return (ViewObjectImpl) findViewObject("OresAddition1");
    }

    /**
     * Container's getter for OresDiscount1.
     * @return OresDiscount1
     */
    public ViewObjectImpl getOresDiscount1() {
        return (ViewObjectImpl) findViewObject("OresDiscount1");
    }

    /**
     * Container's getter for AddQuantity1.
     * @return AddQuantity1
     */
    public ViewObjectImpl getAddQuantity1() {
        return (ViewObjectImpl) findViewObject("AddQuantity1");
    }

    /**
     * Container's getter for AddQuantityVuLink1.
     * @return AddQuantityVuLink1
     */
    public ViewLinkImpl getAddQuantityVuLink1() {
        return (ViewLinkImpl) findViewLink("AddQuantityVuLink1");
    }

    /**
     * Container's getter for DiscountQuantity1.
     * @return DiscountQuantity1
     */
    public ViewObjectImpl getDiscountQuantity1() {
        return (ViewObjectImpl) findViewObject("DiscountQuantity1");
    }

    /**
     * Container's getter for DiscountQuantityVuLink1.
     * @return DiscountQuantityVuLink1
     */
    public ViewLinkImpl getDiscountQuantityVuLink1() {
        return (ViewLinkImpl) findViewLink("DiscountQuantityVuLink1");
    }
}

