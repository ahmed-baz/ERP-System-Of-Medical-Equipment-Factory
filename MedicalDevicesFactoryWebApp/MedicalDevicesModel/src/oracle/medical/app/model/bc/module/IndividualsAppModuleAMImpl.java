package oracle.medical.app.model.bc.module;

import oracle.jbo.domain.Date;

import oracle.jbo.Row;
import oracle.jbo.RowSetIterator;
import oracle.jbo.ViewCriteria;
import oracle.jbo.ViewCriteriaRow;
import oracle.jbo.server.ApplicationModuleImpl;


import oracle.jbo.server.DBTransaction;
import oracle.jbo.server.ViewObjectImpl;

import oracle.medical.app.model.bc.module.common.IndividualsAppModuleAM;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sat Aug 31 16:50:16 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class IndividualsAppModuleAMImpl extends ApplicationModuleImpl implements IndividualsAppModuleAM {
    /**
     * This is the default constructor (do not remove).
     */
    public IndividualsAppModuleAMImpl() {
    }


    /**
     * Container's getter for Sergeants1.
     * @return Sergeants1
     */
    public ViewObjectImpl getSergeants1() {
        return (ViewObjectImpl) findViewObject("Sergeants1");
    }

    /**
     * Container's getter for Privates1.
     * @return Privates1
     */
    public ViewObjectImpl getPrivates1() {
        return (ViewObjectImpl) findViewObject("Privates1");
    }


    /**
     * Container's getter for NewSoldier1.
     * @return NewSoldier1
     */
    public ViewObjectImpl getNewSoldier1() {
        return (ViewObjectImpl) findViewObject("NewSoldier1");
    }

    public void filterSoldiers() {
        ViewObjectImpl vo = getPrivates1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "Y");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
    }

    public void filterSergeants() {
        ViewObjectImpl vo = getSergeants1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "Y");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
    }

    public void filterOfficers() {
        ViewObjectImpl vo = getOfficers1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "Y");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();
    }

    /**
     * Container's getter for NewSergeant1.
     * @return NewSergeant1
     */
    public ViewObjectImpl getNewSergeant1() {
        return (ViewObjectImpl) findViewObject("NewSergeant1");
    }

    /**
     * Container's getter for NewOfficer1.
     * @return NewOfficer1
     */
    public ViewObjectImpl getNewOfficer1() {
        return (ViewObjectImpl) findViewObject("NewOfficer1");
    }

    /**
     * Container's getter for Officers1.
     * @return Officers1
     */
    public ViewObjectImpl getOfficers1() {
        return (ViewObjectImpl) findViewObject("Officers1");
    }

    public void terminateSoldier() {
        Date d = new Date();

        ViewObjectImpl vo = getPrivates1();
        ViewCriteria vc = vo.createViewCriteria();
        ViewCriteriaRow vcRow = vc.createViewCriteriaRow();
        vcRow.setAttribute("Active", "Y");
        vc.addRow(vcRow);
        vo.applyViewCriteria(vc);
        vo.executeQuery();

        RowSetIterator iter = vo.createRowSetIterator(null);

        while (iter.hasNext()) {
            Row userRow = iter.next();
            Date TerminationDate = (Date) userRow.getAttribute("TerminationDate");
            if (d.getCurrentDate().compareTo(TerminationDate) >= 0) {
               userRow.setAttribute("Active", "N");
                this.getDBTransaction().commit();
            }
        }


    }

    /**
     * Container's getter for TerminatedOfficers1.
     * @return TerminatedOfficers1
     */
    public ViewObjectImpl getTerminatedOfficers1() {
        return (ViewObjectImpl) findViewObject("TerminatedOfficers1");
    }

    /**
     * Container's getter for TerminatedPrivates1.
     * @return TerminatedPrivates1
     */
    public ViewObjectImpl getTerminatedPrivates1() {
        return (ViewObjectImpl) findViewObject("TerminatedPrivates1");
    }

    /**
     * Container's getter for TerminatedSergeants1.
     * @return TerminatedSergeants1
     */
    public ViewObjectImpl getTerminatedSergeants1() {
        return (ViewObjectImpl) findViewObject("TerminatedSergeants1");
    }
    
}

