package oracle.medical.app.model.bc.entity.settings;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Number;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.SequenceImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Thu Oct 03 18:03:18 EET 2019
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class UniversitiesEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
     */
    public enum AttributesEnum {
        UniversityId,
        University;
        private static AttributesEnum[] vals = null;
        private static final int firstIndex = 0;

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static final int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static final AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }
    public static final int UNIVERSITYID = AttributesEnum.UniversityId.index();
    public static final int UNIVERSITY = AttributesEnum.University.index();

    /**
     * This is the default constructor (do not remove).
     */
    public UniversitiesEOImpl() {
    }

    /**
     * Gets the attribute value for UniversityId, using the alias name UniversityId.
     * @return the value of UniversityId
     */
    public Number getUniversityId() {
        return (Number) getAttributeInternal(UNIVERSITYID);
    }

    /**
     * Sets <code>value</code> as the attribute value for UniversityId.
     * @param value value to set the UniversityId
     */
    public void setUniversityId(Number value) {
        setAttributeInternal(UNIVERSITYID, value);
    }

    /**
     * Gets the attribute value for University, using the alias name University.
     * @return the value of University
     */
    public String getUniversity() {
        return (String) getAttributeInternal(UNIVERSITY);
    }

    /**
     * Sets <code>value</code> as the attribute value for University.
     * @param value value to set the University
     */
    public void setUniversity(String value) {
        setAttributeInternal(UNIVERSITY, value);
    }

    /**
     * @param universityId key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Number universityId) {
        return new Key(new Object[] { universityId });
    }

    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("oracle.medical.app.model.bc.entity.settings.UniversitiesEO");
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        if (operation == DML_INSERT) {
            SequenceImpl seq = new SequenceImpl("UNIVERSITIES_SEQ", this.getDBTransaction());
            Number university_id = seq.getSequenceNumber();
            this.setUniversityId(university_id);
        }
        super.doDML(operation, e);
    }
}

